NOTES:

+ Kendo doesn't support a hierarchy of view models
+ Kendo does not report binding errors
+ Kendo bindings are not JavaScript!
+ Kendo magic means objects do not give Intellisense
+ Knockout is flexible, you can use literals or functions to create view models.
+ Kendo has different setters
+ Could not bind to a list of strings
+ jQM has built in list styling
+ Kendo has the concept of datasources:
+ Kendo does not mangle the DOM
+ Kendo buttons are a littel small for iPhone
+  data-transition="slide" - crashes with no warning

var dataSource = new kendo.data.DataSource({
                pageSize: 12,
                serverPaging: true,
                serverFiltering: true,
                transport: {
                    read: {
                        url: "http://search.twitter.com/search.json", // the remove service url
                        dataType: "jsonp" // JSONP (JSON with padding) is required for cross-domain AJAX
                    },
                    parameterMap: function(options) {
                        var filter = options.filter ? options.filter.filters[0].value : "javascript";
                        var parameters = {
                            q: filter, //additional parameters sent to the remote service
                            rpp: options.pageSize,
                            page: options.page //next page
                        }

                        return parameters;
                    }
                },
                schema: { // describe the result format
                    data: "results" // the data which the data source will be bound to is in the "results" field
                }
            });

